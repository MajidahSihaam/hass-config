# Lights
- alias: Kitchen Lights Off
  trigger:
  - entity_id: binary_sensor.kitchen_motion
    platform: state
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 15
      seconds: 0
  action:
  - service: light.turn_off
    entity_id: light.kitchen
    data:
      transition: 15

- alias: Kitchen Lights On
  trigger:
  - entity_id: binary_sensor.kitchen_motion
    platform: state
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: light.kitchen
    state: 'off'
  action:
  - service: light.hue_activate_scene
    data_template:
      group_name: Kitchen
      scene_name: '{{ states.sensor.day_phase.state }}'

- alias: Kitchen Lights Update
  trigger:
  - entity_id: sensor.day_phase
    platform: state
  condition:
    condition: state
    entity_id: light.kitchen
    state: 'on'
  action:
  - service: light.hue_activate_scene
    data_template:
      group_name: Kitchen
      scene_name: '{{ states.sensor.day_phase.state }}'

# Heater
- alias: Sync heater at Startup
  trigger:
    platform: homeassistant
    event: start
  action:
    service: climate.set_temperature
    entity_id: climate.kitchen
    data_template:
      temperature: '{{ states.sensor.house_thermostat_target.state }}'

- alias: Turn off kitchen heater X minutes after last movement
  trigger:
  - entity_id: binary_sensor.kitchen_motion
    platform: state
    to: 'off'
    for:
      hours: 0
      minutes: 15
      seconds: 0
  action:
  - service: climate.set_operation_mode
    entity_id: climate.kitchen
    data:
      operation_mode: 'off'

- alias: Turn on kitchen heater on motion
  trigger:
  - entity_id: binary_sensor.kitchen_motion
    platform: state
    to: 'on'
  action:
  - service: climate.set_operation_mode
    entity_id: climate.kitchen
    data:
      operation_mode: 'auto'

- alias: Sync with Nest target temperature
  trigger:
  - entity_id: sensor.house_thermostat_target
    platform: state
  action:
    service: climate.set_temperature
    entity_id: climate.kitchen
    data_template:
      temperature: '{{ states.sensor.house_thermostat_target.state }}'
