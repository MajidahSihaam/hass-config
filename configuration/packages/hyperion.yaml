hyperion:
  automation:
  - alias: Hyperion Update
    trigger:
    - platform: state
      entity_id: sensor.living_room_tv
    - platform: state
      entity_id: input_select.hyperion_effect
    - platform: state
      entity_id: sensor.day_phase
    action:
    - service_template: >
      {% if states.sensor.day_phase.state in ['Evening', 'Night'] %}
        {% if states.sensor.living_room_tv.state != "PowerOff" %}
          shell_command.hyperion_on
        {% elif states.input_select.hyperion_effect.state == "Off" %}
          shell_command.hyperion_off
        {% else %}
          shell_command.hyperion_set_effect
        {% endif %}
      {% else %}
        shell_command.hyperion_off
      {% endif %}

  input_select:
    hyperion_effect:
      name: Ambilight Standby Mode
      icon: mdi:camcorder-box
      options:
      - "Off"
      - "Knight rider"
      - "Full color mood blobs"
      - "Rainbow mood"
      - "Blue mood blobs"
      - "Cold mood blobs"
      - "Green mood blobs"
      - "Red mood blobs"
      - "Warm mood blobs"
      - "Rainbow swirl fast"
      - "Snake"
      - "Strobe blue"
      - "Strobe Raspbmc"
      - "Strobe white"
      - "Cinema dim lights"
      - "Cinema brighten lights"
      - "Police Lights Single"
      - "Police Lights Solid"
      - "Random"
      - "Running dots"
      - "System Shutdown"
      - "Sparks Color"
      - "Sparks"
      - "Color traces"
      initial: "Full color mood blobs"

  switch:
  - platform: command_line
    switches:
      hyperion:
        friendly_name: Ambilight
        command_on: '/config/scripts/hyperion/on.sh'
        command_off: '/config/scripts/hyperion/off.sh'
        command_state: '/config/scripts/hyperion/status.sh'

  shell_command:
    hyperion_on: '/config/scripts/hyperion/on.sh'
    hyperion_off: '/config/scripts/hyperion/off.sh'
    hyperion_set_effect: '/config/scripts/hyperion/effects.sh "{{ states.input_select.hyperion_effect.state }}"'