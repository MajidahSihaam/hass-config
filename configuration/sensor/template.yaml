- platform: template
  sensors:
    day_phase:
      friendly_name: 'Day Phase'
      value_template: >
        {% if now() > now().replace(hour=5).replace(minute=0).replace(second=0) and
            now() < now().replace(hour=7).replace(minute=0).replace(second=0) and 
            now().isoweekday() <= 5 and 
            states.input_boolean.holiday_mode.state == 'off' %}
            Morning
        {% elif states.sun.sun.state == "above_horizon" or
            now() > now().replace(hour=5).replace(minute=0).replace(second=0) and
            now() < now().replace(hour=12).replace(minute=0).replace(second=0) %}
            Day
        {% elif now() < now().replace(hour=21).replace(minute=45).replace(second=0) and
            now() > now().replace(hour=5).replace(minute=0).replace(second=0) %}
            Evening
        {% else %}
            Night
        {% endif %}
      icon_template: >
        {% if now() > now().replace(hour=5).replace(minute=0).replace(second=0) and
            now() < now().replace(hour=7).replace(minute=0).replace(second=0) and 
            now().isoweekday() <= 5 and 
            states.input_boolean.holiday_mode.state == 'off' %}
            # Morning
            mdi:weather-sunset-up
        {% elif states.sun.sun.state == "above_horizon" or
            now() > now().replace(hour=5).replace(minute=0).replace(second=0) and
            now() < now().replace(hour=12).replace(minute=0).replace(second=0) %}
            # Day
            mdi:weather-sunny
        {% elif now() < now().replace(hour=21).replace(minute=45).replace(second=0) and
            now() > now().replace(hour=5).replace(minute=0).replace(second=0) %}
            # Evening
            mdi:weather-night
        {% else %}
            # Night
            mdi:sleep
        {% endif %}
    lights_on:
        friendly_name: 'Lights On'
        value_template: >
            {% for state in states if ('light' in state.entity_id 
                        and state.domain in ['light','switch']
                        and state.state == 'on' 
                        and not state.attributes.is_hue_group) -%}
                {% if loop.first -%}
                    {{ loop.length }}
                {%- endif %}
            {%- endfor %}
    rooms_on:
        friendly_name: 'Rooms On'
        value_template: >
            {% for state in states if ('light' in state.entity_id 
                        and state.domain in ['light','switch']
                        and state.state == 'on' 
                        and state.attributes.is_hue_group) -%}
                {% if loop.first -%}
                    {{ loop.length }}
                {%- endif %}
            {%- endfor %}

